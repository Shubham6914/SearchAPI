
# DESCRIPTION ---->

"""
This API is a comprehensive RESTful API designed to manage user profiles and textual content
within a web application. It provides endpoints for user authentication, profile management,
and manipulation of textual content such as paragraphs. Users can create, update, and retrieve
their profiles, as well as perform operations related to the textual content they have authored.
The API also offers search functionality to locate specific words within user-written paragraphs.
Built using Django Rest Framework and PostgreSQL, this API offers secure and efficient management of
user data and textual content, empowering developers to build rich user-centric applications with ease.
"""


# DOCUMENTAION LINK -->

LINK = "https://documenter.getpostman.com/view/32308085/2sA35G4hCm"





# TECH STACK UTILIZED ---->

"""
- Python
- Django Rest Framework
- PostgreSQL for database management
- Postman for testing API functionality
"""




# Steps Used to Create this API ---->
"""
1. Installed VS Code IDE for development.
2. Installed Django and Django Rest Framework using pip.
3. Installed Python for writing code.
4. Installed PostgreSQL for database management.
5. Installed Postman for testing API functionality.
6. Created a Python virtual environment (myvenv) for development.
7. Installed Simple JWT for token-based authentication.
8. Installed psycopg2 Python library, which provides a PostgreSQL database adapter for Django.
9. Used REST API design pattern to design a RESTful API.
"""



# Additional Points ---->
"""
- Set up project structure and configuration files.
- Defined Django models to represent user profiles and textual content.
- Created serializers to transform Django model instances into JSON format.
- Implemented class based views to handle HTTP requests and responses.
- Configured URL routing to map API endpoints to corresponding views.
- Integrated token-based authentication using Simple JWT.
- Utilized PostgreSQL as the backend database for storing user data and textual content.
- Tested API endpoints using Postman to ensure functionality and reliability.

"""